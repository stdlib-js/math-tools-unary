"use strict";var v=function(r,e){return function(){return e||r((e={exports:{}}).exports,e),e.exports}};var b=v(function(jr,w){"use strict";var h=require("@stdlib/ndarray-ctor"),q=require("@stdlib/ndarray-base-buffer"),G=require("@stdlib/ndarray-base-shape2strides"),H=require("@stdlib/ndarray-base-numel"),J=require("@stdlib/array-base-copy-indexed");function Q(r,e,u,n){var t,i,d;return t=J(e.shape),t.length===0?(i=q(u,1),d=h(u,i,[],[0],0,n)):(i=q(u,e.length||H(t)),d=h(u,i,t,G(t,n),0,n)),r(e,d),d}w.exports=Q});var T=v(function(_r,E){"use strict";var W=require("@stdlib/string-format");function X(r,e){switch(e){case"same":return r;case"floating-point":return r==="float64"||r==="float32"||r==="generic"||r==="complex128"||r==="complex64"?r:"float64";case"real floating-point":return r==="float64"||r==="float32"||r==="generic"?r:"float64";case"complex floating-point":return r==="complex128"||r==="complex64"?r:"complex128";default:throw new Error(W("invalid option. Unsupported policy for determining an output array data type. Option: `%s`.",e))}}E.exports=X});var O=v(function(kr,Y){Y.exports={output_dtype_policy:"floating-point"}});var _=v(function(Vr,j){"use strict";var Z=require("@stdlib/assert-is-plain-object"),$=require("@stdlib/assert-has-own-property"),x=require("@stdlib/assert-is-function"),rr=require("@stdlib/assert-is-null"),er=require("@stdlib/utils-keys"),P=require("@stdlib/string-format");function ar(r,e){var u,n,t,i;if(!Z(e))return new TypeError(P("invalid argument. Resolution table must be an object. Value: `%s`.",e));for(u=er(r),i=0;i<u.length;i++)if(t=u[i],$(e,t)){if(n=e[t],!x(n)&&!rr(n))return new TypeError(P("invalid argument. Resolution table `%s` field value must be either a function or null. Value: `%s`.",t,n));r[t]=n}return null}j.exports=ar});var k=v(function(zr,ir){ir.exports=["same","floating-point","real floating-point","complex floating-point"]});var C=v(function(Cr,z){"use strict";var nr=require("@stdlib/assert-is-plain-object"),tr=require("@stdlib/assert-has-own-property"),ur=require("@stdlib/array-base-assert-contains").factory,V=require("@stdlib/string-format"),or=k(),lr=ur(or);function sr(r,e){return nr(e)?tr(e,"output_dtype_policy")&&(r.policy=e.output_dtype_policy,!lr(r.policy))?new TypeError(V("invalid option. `%s` option must be a recognized/supported output array data type policy. Option: `%s`.","output_dtype_policy",r.policy)):null:new TypeError(V("invalid argument. Options argument must be an object. Value: `%s`.",e))}z.exports=sr});var M=v(function(Ir,L){"use strict";var pr=require("@stdlib/assert-is-plain-object"),I=require("@stdlib/assert-has-own-property"),R=require("@stdlib/array-base-assert-contains").factory,vr=require("@stdlib/ndarray-orders"),dr=require("@stdlib/ndarray-dtypes"),c=require("@stdlib/string-format"),fr=R(vr()),cr=R(dr());function mr(r,e){return pr(e)?I(e,"dtype")&&(r.dtype=e.dtype,!cr(r.dtype))?new TypeError(c("invalid option. `%s` option must be a recognized/supported data type. Option: `%s`.","dtype",r.dtype)):I(e,"order")&&(r.order=e.order,!fr(r.order))?new TypeError(c("invalid option. `%s` option must be a recognized/supported data type. Option: `%s`.","order",r.order)):null:new TypeError(c("invalid argument. Options argument must be an object. Value: `%s`.",e))}L.exports=mr});var A=v(function(Rr,U){"use strict";var gr=require("@stdlib/utils-define-nonenumerable-read-only-property"),N=require("@stdlib/assert-is-number").isPrimitive,S=require("@stdlib/assert-is-complex-like"),m=require("@stdlib/assert-is-ndarray-like"),g=require("@stdlib/assert-is-collection"),y=require("@stdlib/ndarray-base-buffer-dtype"),yr=require("@stdlib/ndarray-base-buffer"),D=require("@stdlib/ndarray-base-broadcast-array"),F=require("@stdlib/string-format"),hr=b(),K=T(),qr=O(),wr=_(),br=C(),Er=M();function Tr(r,e){var u,n,t,i;if(i={number:null,complex:null,array:null,ndarray:null},n=wr(i,r),n||(u={policy:qr.output_dtype_policy},arguments.length>1&&(n=br(u,e),n)))throw n;return t=d,gr(t,"assign",B),t;function d(a){var o,s,l,p,f;if(N(a)){if(i.number)return i.number(a);throw new TypeError("invalid argument. Providing a number is not supported.")}if(S(a)){if(i.complex)return i.complex(a);throw new TypeError("invalid argument. Providing a complex number is not supported.")}if(l={},arguments.length>1&&(p=Er(l,arguments[1]),p))throw p;if(m(a)){if(i.ndarray===null)throw new TypeError("invalid argument. Providing an ndarray is not supported.");return s=l.dtype||K(a.dtype,u.policy),hr(i.ndarray,a,s,l.order||a.order)}if(g(a)){if(i.array===null)throw new TypeError("invalid argument. Providing an array-like object is not supported.");return o=y(a)||"generic",s=l.dtype||K(o,u.policy),f=yr(s,a.length),i.array(a.length,o,a,1,s,f,1),f}throw new TypeError(F("invalid argument. Must provide an argument having a supported data type. Value: `%s`.",a))}function B(a,o){var s,l,p;if(m(a)){if(m(o)){if(s=a.shape,l=o.shape,s.length===l.length){for(p=0;p<s.length;p++)if(s[p]!==l[p]){a=D(a,l);break}}else a=D(a,l);return i.ndarray(a,o),o}throw new TypeError("invalid argument. If the first argument is an ndarray, the second argument must be an ndarray.")}if(g(a)){if(g(o)){if(o.length!==a.length)throw new RangeError("invalid argument. Output array must have the same number of elements (i.e., length) as the input array.");return i.array(a.length,y(a)||"generic",a,1,y(o)||"generic",o,1),o}throw new TypeError("invalid argument. If the first argument is an array-like object, the second argument must be an array-like object.")}throw N(a)?new TypeError("invalid argument. Providing a number is not supported. Consider providing a zero-dimensional ndarray containing the numeric value."):S(a)?new TypeError("invalid argument. Providing a complex number is not supported. Consider providing a zero-dimensional ndarray containing the complex number value."):new TypeError(F("invalid argument. Must provide an argument having a supported data type. Value: `%s`.",a))}}U.exports=Tr});var Or=A();module.exports=Or;
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
