// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import{isPrimitive as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.1.1-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-complex-like@v0.1.1-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.1.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-buffer-dtype@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-buffer@v0.1.1-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-broadcast-array@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ctor@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-shape2strides@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-numel@v0.1.1-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-copy-indexed@v0.1.0-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.1-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-null@v0.1.1-esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-keys@v0.1.0-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-contains@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-orders@v0.1.1-esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-dtypes@v0.1.0-esm/index.mjs";function x(e,r,t,n){var i,s,a;return 0===(i=u(r.shape)).length?(s=o(t,1),a=l(t,s,[],[0],0,n)):(s=o(t,r.length||m(i)),a=l(t,s,i,p(i,n),0,n)),e(r,a),a}function w(e,r){switch(r){case"same":return e;case"floating-point":return"float64"===e||"float32"===e||"generic"===e||"complex128"===e||"complex64"===e?e:"float64";case"real floating-point":return"float64"===e||"float32"===e||"generic"===e?e:"float64";case"complex floating-point":return"complex128"===e||"complex64"===e?e:"complex128";default:throw new Error(d("invalid option. Unsupported policy for determining an output array data type. Option: `%s`.",r))}}var E="floating-point";function T(e,r){var t,n,i,s;if(!g(r))return new TypeError(d("invalid argument. Resolution table must be an object. Value: `%s`.",r));for(t=y(e),s=0;s<t.length;s++)if(i=t[s],h(r,i)){if(n=r[i],!c(n)&&!f(n))return new TypeError(d("invalid argument. Resolution table `%s` field value must be either a function or null. Value: `%s`.",i,n));e[i]=n}return null}var k=["same","floating-point","real floating-point","complex floating-point"];function O(e,r){return g(r)?h(r,"output_dtype_policy")&&(e.policy=r.output_dtype_policy,!v(k,e.policy))?new TypeError(d("invalid option. `%s` option must be a recognized/supported output array data type policy. Option: `%s`.","output_dtype_policy",e.policy)):null:new TypeError(d("invalid argument. Options argument must be an object. Value: `%s`.",r))}var P=j(),V=b();function _(e,r){return g(r)?h(r,"dtype")&&(e.dtype=r.dtype,!v(V,e.dtype))?new TypeError(d("invalid option. `%s` option must be a recognized/supported data type. Option: `%s`.","dtype",e.dtype)):h(r,"order")&&(e.order=r.order,!v(P,e.order))?new TypeError(d("invalid option. `%s` option must be a recognized/supported data type. Option: `%s`.","order",e.order)):null:new TypeError(d("invalid argument. Options argument must be an object. Value: `%s`.",r))}function z(l,p){var m,u,g,h;if(u=T(h={number:null,complex:null,array:null,ndarray:null},l))throw u;if(m={policy:E},arguments.length>1&&(u=O(m,p)))throw u;return e(g=c,"assign",f),g;function c(e){var a,l,p,u,g;if(r(e)){if(h.number)return h.number(e);throw new TypeError("invalid argument. Providing a number is not supported.")}if(t(e)){if(h.complex)return h.complex(e);throw new TypeError("invalid argument. Providing a complex number is not supported.")}if(p={},arguments.length>1&&(u=_(p,arguments[1])))throw u;if(n(e)){if(null===h.ndarray)throw new TypeError("invalid argument. Providing an ndarray is not supported.");return l=p.dtype||w(e.dtype,m.policy),x(h.ndarray,e,l,p.order||e.order)}if(i(e)){if(null===h.array)throw new TypeError("invalid argument. Providing an array-like object is not supported.");return a=s(e)||"generic",l=p.dtype||w(a,m.policy),g=o(l,e.length),h.array(e.length,a,e,1,l,g,1),g}throw new TypeError(d("invalid argument. Must provide an argument having a supported data type. Value: `%s`.",e))}function f(e,o){var l,p,m;if(n(e)){if(n(o)){if(l=e.shape,p=o.shape,l.length===p.length){for(m=0;m<l.length;m++)if(l[m]!==p[m]){e=a(e,p);break}}else e=a(e,p);return h.ndarray(e,o),o}throw new TypeError("invalid argument. If the first argument is an ndarray, the second argument must be an ndarray.")}if(i(e)){if(i(o)){if(o.length!==e.length)throw new RangeError("invalid argument. Output array must have the same number of elements (i.e., length) as the input array.");return h.array(e.length,s(e)||"generic",e,1,s(o)||"generic",o,1),o}throw new TypeError("invalid argument. If the first argument is an array-like object, the second argument must be an array-like object.")}if(r(e))throw new TypeError("invalid argument. Providing a number is not supported. Consider providing a zero-dimensional ndarray containing the numeric value.");if(t(e))throw new TypeError("invalid argument. Providing a complex number is not supported. Consider providing a zero-dimensional ndarray containing the complex number value.");throw new TypeError(d("invalid argument. Must provide an argument having a supported data type. Value: `%s`.",e))}}export{z as default};
//# sourceMappingURL=index.mjs.map
