// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import r from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-complex-like@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-buffer-dtype@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-buffer@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-broadcast-array@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ctor@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-shape2strides@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-numel@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-null@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-keys@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-contains@esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-orders@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-dtypes@esm/index.mjs";var b=p,w=o,x=l,E=m;var T=function(r,e,t,n){var i,s,o;return i=function(r){var e,t;for(e=[],t=0;t<r.length;t++)e.push(r[t]);return e}(e.shape),0===i.length?(s=w(t,1),o=b(t,s,[],[0],0,n)):(s=w(t,e.length||E(i)),o=b(t,s,i,x(i,n),0,n)),r(e,o),o},_=d;var k=function(r,e){switch(e){case"same":return r;case"float":return"float64"===r||"float32"===r||"generic"===r?r:"float64";default:throw new Error(_("invalid option. Unsupported policy for determining an output array data type. Option: `%s`.",e))}},O={output_dtype_policy:"float"},P=u,V=h,z=y,R=g,C=f,I=d;var M=function(r,e){var t,n,i,s;if(!P(e))return new TypeError(I("invalid argument. Resolution table must be a plain object. Value: `%s`.",e));for(t=C(r),s=0;s<t.length;s++)if(i=t[s],V(e,i)){if(n=e[i],!z(n)&&!R(n))return new TypeError(I("invalid argument. Resolution table `%s` field value must be either a function or `null`. Value: `%s`.",i,n));r[i]=n}return null},U=u,q=h,A=c,B=d,D=["same","float"];var F=function(r,e){return U(e)?q(e,"output_dtype_policy")&&(r.policy=e.output_dtype_policy,!A(D,r.policy))?new TypeError(B("invalid option. `%s` option must be a recognized/supported output array data type policy. Option: `%s`.","output_dtype_policy",r.policy)):null:new TypeError(B("invalid argument. Options argument must be a plain object. Value: `%s`.",e))},G=u,H=h,J=c,K=j,L=d,N=v(),Q=K();var S=function(r,e){return G(e)?H(e,"dtype")&&(r.dtype=e.dtype,!J(Q,r.dtype))?new TypeError(L("invalid option. `%s` option must be a recognized/supported data type. Option: `%s`.","dtype",r.dtype)):H(e,"order")&&(r.order=e.order,!J(N,r.order))?new TypeError(L("invalid option. `%s` option must be a recognized/supported data type. Option: `%s`.","order",r.order)):null:new TypeError(L("invalid argument. Options argument must be a plain object. Value: `%s`.",e))},W=r,X=e.isPrimitive,Y=t,Z=n,$=i,rr=s,er=o,tr=a,nr=d,ir=T,sr=k,or=O,ar=M,dr=F,pr=S;var lr=function(r,e){var t,n,i,s;if(n=ar(s={number:null,complex:null,array:null,ndarray:null},r))throw n;if(t={policy:or.output_dtype_policy},arguments.length>1&&(n=dr(t,e)))throw n;return W(i=o,"assign",a),i;function o(r,e){var n,i,o,a,d;if(X(r)){if(s.number)return s.number(r);throw new TypeError("invalid argument. Providing a number is not supported.")}if(Y(r)){if(s.complex)return s.complex(r);throw new TypeError("invalid argument. Providing a complex number is not supported.")}if(o={},arguments.length>1&&(a=pr(o,e)))throw a;if(Z(r)){if(null===s.ndarray)throw new TypeError("invalid argument. Providing an ndarray is not supported.");return i=o.dtype||sr(r.dtype,t.policy),ir(s.ndarray,r,i,o.order||r.order)}if($(r)){if(null===s.array)throw new TypeError("invalid argument. Providing an array-like object is not supported.");return n=rr(r)||"generic",i=o.dtype||sr(n,t.policy),d=er(i,r.length),s.array(r.length,r,1,d,1),d}throw new TypeError(nr("invalid argument. Must provide an argument having a supported data type. Value: `%s`.",r))}function a(r,e){var t,n,i;if(Z(r)){if(Z(e)){if(t=r.shape,n=e.shape,t.length===n.length){for(i=0;i<t.length;i++)if(t[i]!==n[i]){r=tr(r,n);break}}else r=tr(r,n);return s.ndarray(r,e),e}throw new TypeError("invalid argument. If the first argument is an ndarray, the second argument must be an ndarray.")}if($(r)){if($(e)){if(e.length!==r.length)throw new RangeError("invalid argument. Output array must have the same number of elements (i.e., length) as the input array.");return s.array(r.length,r,1,e,1),e}throw new TypeError("invalid argument. If the first argument is an array-like object, the second argument must be an array-like object.")}if(X(r))throw new TypeError("invalid argument. Providing a number is not supported. Consider providing a zero-dimensional ndarray containing the numeric value.");if(Y(r))throw new TypeError("invalid argument. Providing a complex number is not supported. Consider providing a zero-dimensional ndarray containing the complex number value.");throw new TypeError(nr("invalid argument. Must provide an argument having a supported data type. Value: `%s`.",r))}};export{lr as default};
//# sourceMappingURL=index.mjs.map
